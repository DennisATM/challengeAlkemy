{"version":3,"sources":["components/ModalPowerStats.jsx","components/Dashboard.jsx","components/ContentTeam.jsx","components/Buscador.jsx","components/Home.jsx","components/Login.jsx","App.js","index.js"],"names":["ModalPowerStats","id","name","data","className","tabIndex","type","combat","durability","intelligence","power","speed","strength","Dashboard","team","useState","setCombat","setDurability","setIntelligence","setPower","setSpeed","setStrength","weight","setWeight","height","setHeight","useEffect","totalCombat","totalDurability","totalIntelligence","totalPower","totalSpeed","totalStrength","totalWeight","totalHeight","forEach","element","powerstats","peso","appearance","substring","altura","length","toFixed","ContentTeam","delFromTeam","map","item","src","image","url","alt","biography","alignment","onClick","Buscador","hero","setHero","buscar","setBuscar","setTeam","heroGood","setHeroGood","heroBad","setHeroBad","side","filter","initialValues","validate","values","errors","onSubmit","resetForm","Axios","get","then","response","status","results","catch","error","alert","console","touched","placeholder","undefined","find","Home","Login","logueado","setLogueado","email","password","test","log","post","localStorage","setItem","token","window","location","App","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f2404790.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ModalPowerStats = ({id, name, data}) => {\r\n    return (\r\n        <div>\r\n           <div className=\"modal fade\" id={id} tabIndex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h5 className=\"modal-title text-success\" id=\"exampleModalLabel\">Power Stats of {name}</h5>\r\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                        <span aria-hidden=\"false\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"modal-body text-start\">\r\n                        <h5 className=\"text-primary\"> Combat: <span className=\"text-danger\">{data.combat}</span></h5>\r\n                        <h5 className=\"text-primary\"> Durability: <span className=\"text-danger\">{data.durability}</span></h5>\r\n                        <h5 className=\"text-primary\"> Intelligence: <span className=\"text-danger\">{data.intelligence}</span></h5>\r\n                        <h5 className=\"text-primary\"> Power: <span className=\"text-danger\">{data.power}</span></h5>\r\n                        <h5 className=\"text-primary\"> Speed: <span className=\"text-danger\">{data.speed}</span></h5>\r\n                        <h5 className=\"text-primary\"> Strength: <span className=\"text-danger\">{data.strength}</span></h5>\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default ModalPowerStats;","import React, { Fragment, useState, useEffect} from 'react';\r\n\r\nconst Dashboard = ({team}) => {\r\n    const [combat, setCombat] = useState(0);    \r\n    const [durability, setDurability] = useState(0);\r\n    const [intelligence, setIntelligence] = useState(0);\r\n    const [power, setPower] = useState(0);\r\n    const [speed, setSpeed] = useState(0);\r\n    const [strength, setStrength] = useState(0);\r\n    const [weight, setWeight] = useState(0);\r\n    const [height, setHeight] = useState(0);\r\n    \r\n    useEffect(() =>{\r\n        let totalCombat=0;\r\n        let totalDurability=0;\r\n        let totalIntelligence=0;\r\n        let totalPower=0;\r\n        let totalSpeed=0;\r\n        let totalStrength=0;\r\n        let totalWeight=0;\r\n        let totalHeight=0;\r\n\r\n        team.forEach(element => {\r\n            totalCombat=totalCombat +(element.powerstats.combat*1);\r\n            totalDurability=totalDurability +(element.powerstats.durability*1);\r\n            totalIntelligence=totalIntelligence + (element.powerstats.intelligence*1);\r\n            totalPower = totalPower + (element.powerstats.power * 1);\r\n            totalSpeed = totalSpeed + (element.powerstats.speed * 1);\r\n            totalStrength = totalStrength + (element.powerstats.strength * 1);\r\n            let peso=element.appearance.weight[1].substring(0,3);\r\n            totalWeight = totalWeight + (peso * 1);\r\n            let altura = element.appearance.height[1].substring(0,3);\r\n            totalHeight = totalHeight + (altura * 1);\r\n        });\r\n\r\n        if (team.length>0){\r\n            setCombat((totalCombat/team.length).toFixed(1));\r\n            setDurability((totalDurability/team.length).toFixed(1));\r\n            setIntelligence((totalIntelligence / team.length).toFixed(1));\r\n            setPower((totalPower / team.length).toFixed(1));\r\n            setSpeed((totalSpeed / team.length).toFixed(1));\r\n            setStrength((totalStrength / team.length).toFixed(1));\r\n            setWeight((totalWeight / team.length).toFixed(1));\r\n            setHeight((totalHeight / team.length).toFixed(1));\r\n        }else{\r\n            setCombat(0);\r\n            setDurability(0);\r\n            setIntelligence(0);\r\n            setPower(0);\r\n            setSpeed(0);\r\n            setStrength(0);\r\n            setWeight(0);\r\n            setWeight(0);\r\n        }\r\n        \r\n    },[team]);\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"container\">                    \r\n                <div className=\"card bg-light mb-3\">\r\n                    <div className=\"card-header\">Promedios</div>\r\n                    <div className=\"row d-flex justify-content-around\">\r\n                        <div className=\"card-body col-4 text-danger\">\r\n                            <h5 className=\"card-title text-primary\">PowerStats</h5> \r\n                            <h6>Combat: <span className=\"text-success\">{combat}</span> </h6>\r\n                            <h6>Durability: <span className=\"text-success\"> {durability}</span></h6>\r\n                            <h6>Intelligence: <span className=\"text-success\">{intelligence}</span></h6>\r\n                            <h6>Power: <span className=\"text-success\">{power}</span></h6>\r\n                            <h6>Speed: <span className=\"text-success\">{speed}</span></h6>\r\n                            <h6>Strength: <span className=\"text-success\">{strength}</span></h6>\r\n                        </div>\r\n                        <div className=\"card-body col-4 text-danger\">\r\n                            <h5 className=\"card-title text-primary\">Peso y altura</h5>\r\n                            <h6>Peso: <span className=\"text-success\">{weight} kg</span></h6>\r\n                            <h6>Altura: <span className=\"text-success\">{height} cm</span></h6>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n \r\nexport default Dashboard;","import React, { Fragment} from 'react';\r\nimport ModalPowerStats from './ModalPowerStats';\r\nimport Dashboard from './Dashboard';\r\n\r\nconst ContentTeam = ({data, delFromTeam}) => {\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"jumbotron\">\r\n                <div>\r\n                    <Dashboard team={data}/>\r\n                </div>\r\n                <h1 className=\"text-center\">Nuestro Equipo</h1>\r\n                <div className=\"col-12\">\r\n                        <div className=\"row justify-content-center\">\r\n                        {\r\n                            data.map(item => ( \r\n                                <div key={item.id} className=\"col-xs-12 col-sm-6 col-lg-3 text-center\">\r\n                                    <div className=\"card mt-2\" >\r\n                                        <img src={item.image.url} className=\"icon-team card-img-top\" alt=\"...\" />\r\n                                        <div className=\"card-body mt-0\">\r\n                                            <h5 className=\"card-title m-0\">{item.name}</h5>\r\n                                            { item.biography.alignment===\"good\"\r\n                                                ?<h6 className=\"text-primary m-0\">{item.biography.alignment}</h6>\r\n                                                :<h6 className=\"text-danger m-0\">{item.biography.alignment}</h6>\r\n                                            }\r\n                                            <button type=\"button\" onClick={()=>delFromTeam(item.id,item.biography.alignment)} className=\"btn btn-danger m-1\" >Quitar</button>\r\n                                            <button type=\"button\" className=\"btn btn-primary m-1\" data-toggle=\"modal\" data-target={`#id${item.id}`} >PowerStats</button>       \r\n                                            \r\n                                            <ModalPowerStats id={`id${item.id}`} name={item.name} data={item.powerstats}/>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n \r\nexport default ContentTeam;","import React, { useState } from 'react';\r\n\r\nimport Axios from 'axios';\r\n\r\nimport {Formik, Form, Field} from 'formik'\r\n\r\nimport ContentTeam from './ContentTeam';\r\n\r\nconst Buscador = () => {\r\n    \r\n    //Contendrá el resultado de la busqueda por nombre de los heroes.\r\n    const [hero, setHero] = useState({});\r\n    //Constante Booleana para indicar si se seguira mostrando el resultado de la busqueda.\r\n    const [buscar,setBuscar] = useState(false);\r\n    //Variable contenedora del Equipo.\r\n    let [team, setTeam]= useState([]);\r\n    //contador de buenos\r\n    const [heroGood, setHeroGood] = useState(0);\r\n    //contador de malos\r\n    const [heroBad, setHeroBad] = useState(0);\r\n    \r\n    /*Función para eliminar héroes del equipo y \r\n    actualizar los contadores de buenos y malos\r\n    recibe el id del héroe y el lado (bueno,malo)*/\r\n    const delFromTeam=(id,side)=>{\r\n         setTeam(team.filter(item => item.id!== id));\r\n         if(side===\"good\"){\r\n             setHeroGood(heroGood-1);\r\n         }else{\r\n             setHeroBad(heroBad-1);\r\n         };\r\n     }\r\n\r\n    const addToTeam=(data)=>{\r\n        //Busca el héroe en el equipo.\r\n        let encontrado =  team.find(item => item.id === data.id); \r\n        //Si no está..\r\n        if (encontrado === undefined) {\r\n            //Verifica si el equipo esta completo\r\n            if (team.length<6){\r\n                //Verifica si el héroe agregado no sobrepasa lo permitido para héroes buenos.\r\n                if (data.biography.alignment===\"good\" && heroGood<3){\r\n                    //Agrega el héroe y contabiliza la cantidad.\r\n                    setTeam([...team,data]);\r\n                    setHeroGood(heroGood + 1);\r\n                }else{\r\n                    if (data.biography.alignment===\"good\" && heroGood===3){\r\n                        alert(\"Ya cuentas con 3 héroes buenos\");\r\n                    }\r\n                    //Verifica si el héroe agregado no sobrepasa lo permitido para héroes malos.\r\n                    if (data.biography.alignment===\"bad\" && heroBad<3){\r\n                        //Agrega el héroe y contabiliza la cantidad.\r\n                        setTeam([...team,data]);        \r\n                        setHeroBad(heroBad + 1);\r\n                    }else{\r\n                        if(data.biography.alignment===\"bad\" && heroBad===3){\r\n                            alert(\"Ya cuentas con 3 héroes malos\");\r\n                        }\r\n                    }\r\n                }\r\n            }else{\r\n                alert(\"El equipo esta completo.\")\r\n            }\r\n        }else{\r\n            alert(\"héroe ya se encuentra en el equipo\")\r\n        }\r\n        // setBuscar(false); //Elimina el resultado de la búsqueda por nombre.\r\n\r\n        /* Nota: se dejo el setBuscar en true, para mayor comodidad del usuario,\r\n           pues en ocasiones agregará más de un héroe del resultado de la búsqueda.*/\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"container\">\r\n\r\n            {/* llamamos al componente ContentTeam pasandole como propiedad el arreglo del equipo,\r\n                además de la función para eliminar integrantes del equipo. */}\r\n            <ContentTeam data={team} delFromTeam={delFromTeam}/> \r\n            <hr />\r\n\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-xs-12 col-md-4 text-center\">\r\n\r\n                    <Formik\r\n                        \r\n                        initialValues={{\r\n                            name:\"\"\r\n                        }}\r\n                        \r\n                        validate={values => {\r\n                            const errors = {};\r\n                            if (!values.name) {\r\n                                errors.name = 'Required';\r\n                            } \r\n                            return errors;\r\n                        }}\r\n\r\n                        onSubmit = {(values,{resetForm})=>{\r\n\r\n                            resetForm();\r\n                            //Hacemos el llamado a la Api con el valor ingresado para la búsqueda.\r\n                            Axios.get(`https://www.superheroapi.com/api.php/1687074934830869/search/${values.name}`,{\r\n                            })\r\n                            .then(response => {\r\n                                if (response.status === 200){\r\n                                    //Añadimos el resultado de la búsqueda al arreglo Hero.\r\n                                    setHero(response.data.results)        \r\n                                    //Ponemos el setBuscar en true para mostrar los resultados.\r\n                                    setBuscar(true);\r\n                                }   \r\n                            })\r\n                            .catch(error => {\r\n                                alert(\"Datos Incorrectos\")\r\n                                console.error('There was an error!', error);\r\n                            });\r\n                        }}\r\n                    >\r\n                        {/*Definimos el UI del Formulario de búsqueda*/}\r\n                        {( {errors, touched} ) => (\r\n                            <Form className=\"form text-center m-4 p-4 bg-dark\">\r\n                                <h2 className=\"text-success\">Buscador de heroes</h2>\r\n                                <div className=\"m-2\">\r\n                                    <Field className=\"form-control\" type=\"text\" name=\"name\" placeholder=\"Nombre de heroe\"/>\r\n                                    {/*Mostramos la linea de error en caso suceda*/}\r\n                                    <h6 className=\"text-warning\">{errors.name && touched.name && errors.name}</h6>\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-danger w-100\">\r\n                                    Buscar\r\n                                </button>\r\n                            </Form>\r\n                        )}\r\n                    </Formik>\r\n                </div>\r\n\r\n                { buscar ?\r\n                    <div className=\"col-xs-12 col-md-8\">\r\n                        <div className=\"row justify-content-center\">\r\n                        {\r\n                            hero.map(item => ( \r\n                                <div key={item.id} className=\"col-xs-12 col-sm-6 col-lg-4 text-center  \">\r\n                                    <div className=\"card mt-2 \" >\r\n                                        <img src={item.image.url} className=\"icon card-img-top\" alt=\"...\" />\r\n                                        <div className=\"card-body\">\r\n                                            <h5 className=\"card-title\">{item.name}</h5>\r\n                                            { item.biography.alignment===\"good\"\r\n                                                ?<h6 className=\"text-primary\">{item.biography.alignment}</h6>\r\n                                                :<h6 className=\"text-danger\">{item.biography.alignment}</h6>\r\n                                            }\r\n                                            <button type=\"button\" className=\"btn btn-primary\" onClick={()=> addToTeam(item)}>Agregar al equipo</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                : \"\"}\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n \r\nexport default Buscador;","import React from 'react';\r\nimport Buscador from './Buscador'\r\nconst Home = () => {\r\n    \r\n    return (\r\n    \r\n        <>\r\n           \r\n        <Buscador/>\r\n                 \r\n        </>\r\n\r\n    );\r\n}\r\n \r\nexport default Home;","import React, { useState } from 'react';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport Axios from 'axios'\r\n\r\n\r\nconst Login = () => {\r\n\r\n  const [logueado, setLogueado] = useState(false)\r\n  \r\n  return(\r\n    <>\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-xs-12 col-md-4\">\r\n                    <Formik\r\n                    \r\n                        initialValues={{\r\n                            email:\"\",\r\n                            password:\"\"\r\n                        }}\r\n                        \r\n                        validate={values => {\r\n                            const errors = {};\r\n                            if (!values.email) {\r\n                                errors.email = 'Required';\r\n                            } else if (\r\n                                !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n                            ) {\r\n                                errors.email = 'Invalid email address';\r\n                            }\r\n                            if (!values.password) {\r\n                                errors.password = 'Required';\r\n                            }\r\n                            return errors;\r\n                        }}\r\n\r\n                        onSubmit = {(values,{resetForm})=>{\r\n                            console.log(\"formulario enviado\");\r\n                            resetForm();\r\n                            Axios.post('http://challenge-react.alkemy.org/',{\r\n                                email: values.email,\r\n                                password:values.password\r\n                            })\r\n                            .then(response => {\r\n                                if (response.status === 200){\r\n                                    localStorage.setItem(\"token\",response.data.token)\r\n                                    setLogueado(true);\r\n                                    window.location= \"/home\";\r\n                                }   \r\n                            })\r\n                            .catch(error => {\r\n                                alert(\"Datos Incorrectos\")\r\n                                console.error('There was an error!', error);\r\n                                window.location=\"/\"\r\n                            });\r\n                        }}\r\n                    >\r\n                        {( {errors, touched} ) => (\r\n                            <Form className=\"form text-center m-4 p-4 bg-dark\">\r\n                                <h2 className=\"text-success\">Bienvenido!!</h2>\r\n                                <div className=\"m-2\">\r\n                                    <Field className=\"form-control\" type=\"email\" name=\"email\" placeholder=\"Ingrese email\"/>\r\n                                    <h6 className=\"text-warning\">{errors.email && touched.email && errors.email}</h6>\r\n                                </div>\r\n                                <div className=\"m-2\">\r\n                                    <Field className=\"form-control\" type=\"password\" name=\"password\" placeholder=\"Ingrese password\" />\r\n                                    <h6 className=\"text-warning\">{errors.password && touched.password && errors.password}</h6>\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-danger w-100\">\r\n                                    Enviar\r\n                                </button>\r\n                                {logueado ? <h5 className=\"text-danger\">Inicio Exitoso</h5> : \"\"}  \r\n                            </Form>\r\n                        )}\r\n                    </Formik>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </>   \r\n  )\r\n};\r\n\r\nexport default Login;","import React from 'react';\nimport {BrowserRouter as Router, Routes, Route} from \"react-router-dom\";\nimport Home from './components/Home';\nimport Login from './components/Login';\n\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"container w-100\">\n        <div className=\"row justify-content-center\">\n          <div className=\"col\">\n            {/* <div className=\"btn-group\">\n              <Link to=\"/\" className=\"btn btn-dark m-1\">\n                Login\n              </Link>\n              <Link to=\"/home\" className=\"btn btn-dark m-1\">\n                Home\n              </Link>\n            </div> */}\n            <Routes>\n              <Route path=\"/home\" element={<Home />}></Route>\n              <Route path=\"/\" element={<Login />}></Route>\n            </Routes>\n          </div>\n          </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}